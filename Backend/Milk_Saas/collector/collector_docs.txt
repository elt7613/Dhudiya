# Collector App Documentation

## Overview
The Collector app is designed to manage milk collection operations, including customer management, milk collection records, rate steps, and market milk prices. It provides a RESTful API interface for these operations and includes features for generating detailed reports.

## Models

### 1. Customer
- Represents milk suppliers
- Fields:
  - name: Customer's full name
  - phone: Contact number (optional)
  - author: Reference to User who created the record
  - is_active: Boolean flag for soft deletion
- Features:
  - Soft deletion support
  - Custom manager for active/all records

### 2. Collection
- Stores milk collection records
- Fields:
  - collection_time: Choice between 'morning'/'evening'
  - milk_type: Choice between 'cow'/'buffalo'
  - customer: ForeignKey to Customer
  - collection_date: Date of collection
  - measured: Choice between 'liters'/'kg'
  - liters: Quantity in liters
  - kg: Quantity in kilograms
  - fat_percentage: Fat percentage
  - fat_kg: Fat quantity in kg
  - clr: CLR measurement
  - snf_percentage: SNF percentage
  - snf_kg: SNF quantity in kg
  - fat_rate: Rate for fat
  - snf_rate: Rate for SNF 
  - rate: Final rate per unit
  - amount: Total amount
  - timestamps: created_at, updated_at
  - author: Reference to collecting User
  - is_active: Soft deletion flag
- Features:
  - Ordered by collection_date and created_at (descending)
  - Soft deletion support
  - Custom manager for active/all records
  - Report generation capabilities

### 3. RateStep
- Defines pricing structure for milk based on fat and SNF content
- Fields:
  - rate_type: Currently supports 'rate per kg'
  - milk_type: Choice between 'cow'/'buffalo'
  - fat_from: Starting fat percentage
  - fat_to: Ending fat percentage
  - fat_rate: Rate for fat range
  - snf_from: Starting SNF percentage
  - snf_to: Ending SNF percentage
  - snf_rate: Rate for SNF range
  - author: Reference to User who created the step
  - is_active: Soft deletion flag
  - timestamps: created_at, updated_at

### 4. MarketMilkPrice
- Stores current market prices for milk
- Fields:
  - price: Current market price
  - author: Reference to User who created the price
  - is_active: Soft deletion flag
  - timestamps: created_at, updated_at

## Views (API Endpoints)

### CustomerViewSet
- Endpoints: /api/collector/customers/
- Operations: CRUD operations for customers
- Features:
  - Search by name/phone
  - Soft deletion
  - Authentication required
  - User-specific data access

### CollectionViewSet
- Endpoints: /api/collector/collections/
- Operations: CRUD operations for milk collections
- Features:
  - Extensive filtering options
  - Search by customer name
  - Ordering by multiple fields
  - Different serializers for list/detail views
  - Soft deletion
  - Authentication required
  - User-specific data access
  - Report Generation:
    - Purchase Report
    - Milk Purchase Summary
    - Customer Milk Bill
  - PDF report generation with proper formatting and pagination

### RateStepViewSet
- Endpoints: /api/collector/rate-steps/
- Operations: CRUD operations for rate steps
- Features:
  - Filtering by rate, fat range, SNF range
  - Ordering options
  - Soft deletion
  - Authentication required
  - User-specific data access

### MarketMilkPriceViewSet
- Endpoints: /api/collector/market-milk-prices/
- Operations: CRUD operations for market prices
- Features:
  - Filtering by price
  - Ordering by price and creation date
  - Soft deletion
  - Authentication required
  - User-specific data access

## Serializers

### CustomerSerializer
- Handles customer data serialization
- Auto-assigns author on creation
- Validates user permissions

### CollectionSerializer
- Two variants:
  - ListSerializer: Optimized for list view with customer name
  - DetailSerializer: Full details including timestamps
- Auto-assigns author on creation
- Handles complex calculations for fat and SNF

### RateStepSerializer
- Handles rate step data with fat and SNF ranges
- Auto-assigns author on creation
- Validates rate ranges

### MarketMilkPriceSerializer
- Handles market price data
- Auto-assigns author on creation
- Validates price data

## Filters

### CollectionFilter
- Supports filtering collections by:
  - Date range (date_from, date_to)
  - Rate range (min_rate, max_rate)
  - Amount range (min_amount, max_amount)
  - Collection time
  - Milk type
  - Customer
  - Measurement type
  - Various measurements (liters, kg, fat, SNF, etc.)

### RateStepFilter
- Supports filtering rate steps by:
  - Rate range (min_rate, max_rate)
  - Fat range (min_fat, max_fat)
  - SNF range (min_snf, max_snf)
  - Milk type
  - Rate type

## Report Generation

### Purchase Report
- Detailed daily collection summary
- Includes:
  - Date-wise totals
  - Weight in kg
  - Liters
  - Fat percentage and kg
  - SNF percentage and kg
  - Amount in Rs.
- Features:
  - Proper pagination
  - Grand totals
  - Professional formatting
  - User identification

### Milk Purchase Summary
- Summarized view of collections
- Includes period totals and averages

### Customer Milk Bill
- Customer-specific collection details
- Professional invoice format
- Detailed calculations

## Admin Interface

The app provides Django admin interfaces for:
- Customer management
- Collection records
- Rate steps
- Market milk prices

Features:
- List filters
- Search functionality
- Custom queryset handling
- Soft deletion support
- User-specific data access

## Authentication & Permissions
- All API endpoints require authentication
- Users can only access/modify their own records
- Uses JWT authentication
- Proper permission checks at all levels

## Data Management
- Implements soft deletion instead of hard deletion
- Maintains audit trails (created_at, updated_at)
- Uses select_related for optimized database queries
- Proper data validation at model and serializer levels 